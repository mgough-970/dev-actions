name: Move Deprecated Notebooks

on:
  workflow_call:
    inputs:
      python-version:
        description: "Python version to use"
        type: string
        required: true

jobs:
  move-deprecated-notebooks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Identify Expired Notebooks from gh-storage
        run: |
          echo "Fetching all branches..."
          git fetch origin

          echo "Checking out gh-storage..."
          git checkout gh-storage
          git pull origin gh-storage

          CURRENT_DATE=$(date -u +"%Y-%m-%d")
          echo "Current UTC Date: $CURRENT_DATE"

          # Clear previous file if exists
          rm -f expired_notebooks.txt

          for nb in $(find notebooks/ -name '*.ipynb'); do
            REMOVAL_DATE=$(jq -r '.metadata.deprecated.removal_date // empty' "$nb")

            if [[ ! -z "$REMOVAL_DATE" && "$REMOVAL_DATE" < "$CURRENT_DATE" ]]; then
              echo "Notebook expired: $nb"
              echo "$nb" >> expired_notebooks.txt
            fi
          done

          if [[ -f expired_notebooks.txt ]]; then
            cat expired_notebooks.txt
          else
            echo "No expired notebooks found."
          fi

      - name: Remove from main branch
        if: success()
        run: |
          if [[ -f expired_notebooks.txt ]]; then
            echo "Checking out main branch..."
            git checkout main
            git pull origin main

            NOTEBOOKS_REMOVED=false
            TOC_CHANGED=false

            while read -r nb; do
              echo "Removing $nb from main..."
              git rm -f "$nb" || echo "File $nb not found in main."

              # Remove from ./_toc.yml (remove line matching notebook path minus .ipynb)
              TOC_ENTRY="${nb%.ipynb}"
              echo "Removing $TOC_ENTRY from ./_toc.yml..."
              grep -v "^- file: $TOC_ENTRY$" ./_toc.yml > temp.yml && mv temp.yml ./_toc.yml
              TOC_CHANGED=true
              NOTEBOOKS_REMOVED=true
            done < expired_notebooks.txt

            if [[ "$NOTEBOOKS_REMOVED" == "true" ]]; then
              git add notebooks/
            fi

            if [[ "$TOC_CHANGED" == "true" ]]; then
              git add ./_toc.yml
            fi

            if [[ "$NOTEBOOKS_REMOVED" == "true" || "$TOC_CHANGED" == "true" ]]; then
              git commit -m "Removed expired notebooks and updated _toc.yml"
              git push origin main
            else
              echo "No changes to commit on main."
            fi
          else
            echo "No expired notebooks to remove from main."
          fi

      - name: Remove from gh-storage branch
        if: success()
        run: |
          if [[ -f expired_notebooks.txt ]]; then
            echo "Checking out gh-storage branch..."
            git checkout gh-storage
            git pull origin gh-storage

            while read -r nb; do
              echo "Removing $nb from gh-storage..."
              git rm -f "$nb" || echo "File $nb not found in gh-storage."
            done < expired_notebooks.txt

            git commit -m "Removed expired notebooks from gh-storage" || echo "No changes to commit."
            git push origin gh-storage
          else
            echo "No expired notebooks to remove from gh-storage."
          fi

      - name: Remove from gh-pages branch (HTML site)
        if: success()
        run: |
          if [[ -f expired_notebooks.txt ]]; then
            echo "Checking out gh-pages branch..."
            git checkout gh-pages
            git pull origin gh-pages

            while read -r nb; do
              HTML_PATH="${nb%.ipynb}.html"
              echo "Removing $HTML_PATH from gh-pages..."
              git rm -f "$HTML_PATH" || echo "File $HTML_PATH not found in gh-pages."
            done < expired_notebooks.txt

            git commit -m "Removed expired notebooks from gh-pages" || echo "No changes to commit."
            git push origin gh-pages
          else
            echo "No expired notebooks to remove from gh-pages."
          fi

      - name: Archive to deprecated branch
        if: success()
        run: |
          if [[ -f expired_notebooks.txt ]]; then
            echo "Checking out deprecated branch..."
            if git show-ref --quiet refs/heads/deprecated; then
              git checkout deprecated
              git pull origin deprecated
            else
              git checkout -b deprecated
            fi

            # Restore from previous gh-storage copy
            git checkout origin/gh-storage -- $(cat expired_notebooks.txt)

            git add $(cat expired_notebooks.txt)
            git commit -m "Archived expired notebooks to deprecated branch" || echo "No changes to commit."
            git push origin deprecated
          else
            echo "No expired notebooks to archive to deprecated branch."
          fi
